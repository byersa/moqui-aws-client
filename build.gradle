/*
 * This Work is in the public domain and is provided on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied,
 * including, without limitation, any warranties or conditions of TITLE,
 * NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE.
 * You are solely responsible for determining the appropriateness of using
 * this Work and assume any risks associated with your use of this Work.
 *
 * This Work includes contributions authored by David E. Jones, not as a
 * "work for hire", who hereby disclaims any copyright to the same.
 */

apply plugin: 'groovy'

sourceCompatibility = '1.6'
def moquiDir = file(projectDir.absolutePath + '/../../..')
def frameworkDir = file(moquiDir.absolutePath + '/framework')

// maybe in the future: repositories { mavenCentral() }
repositories {
    flatDir name: 'localLib', dirs: frameworkDir.absolutePath + '/lib'
    flatDir name: 'moquiLib', dirs: frameworkDir.absolutePath + '/build/libs'
}

dependencies {
    // groovy dependencies (just the library to compile with)
    groovy group: 'org.codehaus.groovy', name: 'groovy-all', version: '2.0.5' // Apache 2.0

    compile fileTree(dir: frameworkDir.absolutePath + '/lib', includes: ['*.jar'])
    compile name: 'moqui-framework', version: version // Public Domain
}

// by default the Java plugin runs test on build, change to not do that (only run test if explicit task)
check.dependsOn.remove(test)

test {
    systemProperty 'moqui.runtime', moquiDir.absolutePath + '/runtime'
    systemProperty 'moqui.conf', 'conf/MoquiDevConf.xml'
    systemProperty 'moqui.init.static', 'true'

    testLogging.showStandardStreams = true

    classpath += files(sourceSets.main.output.classesDir)

    beforeTest { descriptor ->
        logger.lifecycle("Running test: ${descriptor}")
    }
}
